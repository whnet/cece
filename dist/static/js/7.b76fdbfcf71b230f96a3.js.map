{"version":3,"sources":["webpack:///static/js/7.b76fdbfcf71b230f96a3.js","webpack:///./src/utils/rongyun.js","webpack:///./src/pages/members/downChatRecord.vue","webpack:///./src/pages/members/downChatRecord.vue?f018","webpack:///./src/pages/members/downChatRecord.vue?8549","webpack:///./node_modules/core-js/library/fn/object/values.js","webpack:///./node_modules/core-js/library/modules/es7.object.values.js","webpack:///./node_modules/babel-runtime/core-js/object/values.js","webpack:///./node_modules/core-js/library/modules/_object-to-array.js"],"names":["webpackJsonp","6+H1","module","__webpack_exports__","__webpack_require__","init","rongyun_token","callbacks","token","RongIMClient","RongIMLib","config","protobuf","getInstance","setConnectionStatusListener","onChanged","status","console","log","ConnectionStatus","alert","connect","onSuccess","userId","getCurrentUser","onTokenIncorrect","onError","errorCode","callback","errorcode","auto","url","rate","reconnect","setOnReceiveMessageListener","onReceived","message","messageType","MessageType","TextMessage","VoiceMessage","ImageMessage","DiscussionNotificationMessage","RichContentMessage","receiveNewMessage","clearRemoteHistoryMessages","targetId","params","conversationType","ConversationType","PRIVATE","timestamp","error","target","base64Str","imageUri","msg","content","conversationtype","sendMessage","sendImage","sendTextMsg","info","ErrorCode","TIMEOUT","UNKNOWN_ERROR","REJECTED_BY_BLACKLIST","NOT_IN_DISCUSSION","NOT_IN_GROUP","NOT_IN_CHATROOM","x","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__","n","HHHD","Object","defineProperty","value","values","values_default","stringify","stringify_default","rongyun","data","msgContent","created","this","getOrderInfo","methods","$api","ciciouuml","$route","query","orderid","then","res","tomember","out_trade_no","userName","mid","getRongYunToken","downrongyun","startInit","that","userInfo","getHistoryMessages","utils","list","hasMsg","arr","concat","logs","chatlogs","render","_vm","_h","$createElement","_self","_c","staticClass","_v","staticRenderFns","esExports","normalizeComponent","Component","TmV0","exports","fZOM","$export","$values","S","it","gRE1","__esModule","mbce","DESCRIPTORS","getKeys","toIObject","isEnum","f","isEntries","key","O","keys","length","i","result","call","push"],"mappings":"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","file":"static/js/7.b76fdbfcf71b230f96a3.js","sourcesContent":["webpackJsonp([7],{\n\n/***/ \"6+H1\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = init;\n/* unused harmony export getHistoryMessages */\n/* unused harmony export sendTypingStatus */\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = clearRemoteHistoryMessages;\n/* unused harmony export FileMessage */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = ImageMessage;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = sendTextMsg;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__ = __webpack_require__(\"mvHQ\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__);\n\nfunction init(rongyun_token, callbacks) {\n  var appKey = \"qf3d5gbjqhy6h\";\n  var token = rongyun_token;\n  var RongIMClient = RongIMLib.RongIMClient;\n  var config = {};\n  /*\n    重新部署后替换为新路径\n    路径格式说明：不带http(s)://，为了自动从页面继承协议方便\n    */\n  config.protobuf = \"./static/rongyun/protobuf-2.3.1.min.js\",\n  //初始化\n  RongIMClient.init(appKey, null, config);\n\n  var instance = RongIMClient.getInstance();\n\n  // 连接状态监听器\n  RongIMClient.setConnectionStatusListener({\n    onChanged: function onChanged(status) {\n      console.log(status);\n      switch (status) {\n        case RongIMLib.ConnectionStatus[\"CONNECTED\"]:\n        case 0:\n          console.log(\"连接成功\");\n          break;\n\n        case RongIMLib.ConnectionStatus[\"CONNECTING\"]:\n        case 1:\n          console.log(\"连接中\");\n          break;\n\n        case RongIMLib.ConnectionStatus[\"DISCONNECTED\"]:\n        case 2:\n          console.log(\"当前用户主动断开链接\");\n          break;\n\n        case RongIMLib.ConnectionStatus[\"NETWORK_UNAVAILABLE\"]:\n        case 3:\n          console.log(\"网络不可用\");\n          break;\n\n        case RongIMLib.ConnectionStatus[\"CONNECTION_CLOSED\"]:\n        case 4:\n          console.log(\"未知原因，连接关闭\");\n          break;\n\n        case RongIMLib.ConnectionStatus[\"KICKED_OFFLINE_BY_OTHER_CLIENT\"]:\n        case 6:\n          alert(\"用户账户在其他设备登录，本机会被踢掉线\");\n          break;\n\n        case RongIMLib.ConnectionStatus[\"DOMAIN_INCORRECT\"]:\n        case 12:\n          console.log(\"当前运行域名错误，请检查安全域名配置\");\n          break;\n      }\n    }\n  });\n\n  //开始链接，得到用户的ID\n  RongIMClient.connect(token, {\n    onSuccess: function onSuccess(userId) {\n      console.log('rongyunjs=' + userId);\n      callbacks.getCurrentUser && callbacks.getCurrentUser({ userId: userId });\n    },\n    onTokenIncorrect: function onTokenIncorrect() {\n      console.log(\"token无效\");\n    },\n    onError: function onError(errorCode) {\n      console.log(errorCode);\n    }\n  });\n  // 重新连接\n  var callback = {\n    onSuccess: function onSuccess(userId) {\n      callbacks.getCurrentUser && callbacks.getCurrentUser({ userId: userId });\n      console.log('Reconnect successfully. ' + userId);\n    },\n    onTokenIncorrect: function onTokenIncorrect() {\n      console.log('token无效');\n    },\n    onError: function onError(errorCode) {\n      console.log(errorcode);\n    }\n  };\n  var config = {\n    // 默认 false, true 启用自动重连，启用则为必选参数\n    auto: true,\n    // 网络嗅探地址 [http(s)://]cdn.ronghub.com/RongIMLib-2.2.6.min.js 可选\n    url: 'cdn.ronghub.com/RongIMLib-2.2.6.min.js',\n    // 重试频率 [100, 1000, 3000, 6000, 10000, 18000] 单位为毫秒，可选\n    rate: [100, 1000, 3000, 6000, 10000]\n  };\n  RongIMClient.reconnect(callback, config);\n  /*\n      文档：http://www.rongcloud.cn/docs/web.html#3、设置消息监听器\n      注意事项：\n          1：为了看到接收效果，需要另外一个用户向本用户发消息\n          2：判断会话唯一性 ：conversationType + targetId\n          3：显示消息在页面前，需要判断是否属于当前会话，避免消息错乱。\n          4：消息体属性说明可参考：http://rongcloud.cn/docs/api/js/index.html\n      */\n\n  RongIMClient.setOnReceiveMessageListener({\n    // 接收到的消息\n    onReceived: function onReceived(message) {\n      // 判断消息类型\n      // console.log(\"新消息: \" + message.targetId);\n      // console.log(message);\n      // 判断消息类型\n      switch (message.messageType) {\n        case RongIMClient.MessageType.TextMessage:\n          // message.content.content => 消息内容\n          break;\n        case RongIMClient.MessageType.VoiceMessage:\n          // message.content.content 格式为 AMR 格式的 base64 码\n          break;\n        case RongIMClient.MessageType.ImageMessage:\n          // message.content.content => 图片缩略图 base64。\n          // message.content.imageUri => 原图 URL。\n          break;\n        case RongIMClient.MessageType.DiscussionNotificationMessage:\n          // message.content.extension => 讨论组中的人员。\n          break;\n        case RongIMClient.MessageType.RichContentMessage:\n          // message.content.content => 文本消息内容。\n          // message.content.imageUri => 图片 base64。\n          // message.content.url => 原图 URL。\n          break;\n      }\n      callbacks.receiveNewMessage && callbacks.receiveNewMessage(message);\n    }\n  });\n}\n/*\n* 获得历史消息\n*/\nfunction getHistoryMessages(conversationtype, targetId, timestrap, count) {\n  RongIMClient.getInstance().getHistoryMessages(conversationtype, targetId, timestrap, count, {\n    onSuccess: function onSuccess(list, hasMsg) {\n      // hasMsg为boolean值，如果为true则表示还有剩余历史消息可拉取，为false的话表示没有剩余历史消息可供拉取。\n      // list 为拉取到的历史消息列表\n    },\n    onError: function onError(error) {\n      // console.log(error)\n      // APP未开启消息漫游或处理异常\n      // throw new ERROR ......\n    }\n  });\n}\n/*\n * 对方输入的状态\n */\nfunction sendTypingStatus(targetId) {\n  var conversationType = RongIMLib.ConversationType.PRIVATE; // 只有单聊有正在输入状态\n  var msgName = 'TextMessage'; //用户正在输入的消息类型 VoiceMessage等。\n  var targetId = targetId;\n  RongIMClient.getInstance().sendTypingStatusMessage(conversationType, targetId, msgName, {\n    onSuccess: function onSuccess(message) {\n      console.log('typing');\n    },\n    onError: function onError(errorCode, message) {\n      var info = '';\n      switch (errorCode) {\n        case RongIMLib.ErrorCode.TIMEOUT:\n          info = '超时';\n          break;\n        case RongIMLib.ErrorCode.UNKNOWN:\n          info = '未知错误';\n          break;\n      }\n      console.log('发送失败:' + info + errorCode);\n    }\n  });\n}\n/*\n * 清空历史消息\n */\nfunction clearRemoteHistoryMessages(targetId) {\n  /**\n   conversationType: 会话类型\n    targetId: 目标 Id\n    timestamp: 清除时间点，message.sentTime <= timestamp 的消息将被清除 (message: 收发实时或者历史消息中有 sentTime 属性)\n   timestamp 取值范围:  timestamp >=0 并且 timestamp <= 当前会话最后一条消息的 sentTime\n   */\n  var params = {\n    conversationType: RongIMLib.ConversationType.PRIVATE, // 会话类型\n    targetId: targetId, // 目标 Id\n    timestamp: 0 // 清除时间点\n  };\n  RongIMLib.RongIMClient.getInstance().clearRemoteHistoryMessages(params, {\n    onSuccess: function onSuccess() {\n      // 清除成功\n    },\n    onError: function onError(error) {\n      // 请排查：单群聊消息云存储是否开通\n      console.log(error);\n    }\n  });\n}\n/*\n * 使用发送文件消息，用来发送语音\n */\nfunction FileMessage(target, name, fileUrl, callbacks) {\n  var size = 1024,\n      type = 'mp3';\n  var msg = new RongIMLib.FileMessage({ name: name, size: size, type: type, fileUrl: fileUrl });\n  var conversationtype = RongIMLib.ConversationType.PRIVATE; // 单聊,其他会话选择相应的消息类型即可。\n  var targetId = target; // 目标 Id\n  RongIMClient.getInstance().sendMessage(conversationtype, targetId, msg, {\n    onSuccess: function onSuccess(message) {\n      //message 为发送的消息对象并且包含服务器返回的消息唯一Id和发送消息时间戳\n      console.log(\"Send mp3\");\n      console.log(\"Send successfully:\" + __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()(message));\n      callbacks.sendMp3 && callbacks.sendMp3(message);\n    }\n  });\n}\n/*\n 图片消息\n */\nfunction ImageMessage(target, base64Str, imageUri, callbacks) {\n  /*\n       图片转为可以使用 HTML5 的 FileReader 或者 canvas 也可以上传到后台进行转换。\n       注意事项：\n           1、缩略图必须是 base64 码的 jpg 图。\n           2、不带前缀。\n           3、大小建议不超过 100 K。\n     */\n  var msg = new RongIMLib.ImageMessage({ content: base64Str, imageUri: imageUri });\n  var conversationtype = RongIMLib.ConversationType.PRIVATE;\n  var targetId = target;\n  console.log('rongyun-conver:' + conversationtype);\n  console.log('rongyun-targetId:' + targetId);\n  console.log('rongyun-msg:' + msg);\n  RongIMClient.getInstance().sendMessage(conversationtype, targetId, msg, {\n    onSuccess: function onSuccess(message) {\n      callbacks.sendImage && callbacks.sendImage(message);\n    }\n  });\n}\n/*\n * 发送文本消息\n */\nfunction sendTextMsg(conversationtype, targetId, msg, callbacks) {\n  RongIMClient.getInstance().sendMessage(conversationtype, targetId, msg, {\n    onSuccess: function onSuccess(message) {\n      //message 为发送的消息对象并且包含服务器返回的消息唯一Id和发送消息时间戳，使用回调函数\n      callbacks.sendMessage && callbacks.sendMessage(message); // 这样返回的是存文字\n    },\n    onError: function onError(errorCode, message) {\n      var info = '';\n      switch (errorCode) {\n        case RongIMLib.ErrorCode.TIMEOUT:\n          info = '超时';\n          break;\n        case RongIMLib.ErrorCode.UNKNOWN_ERROR:\n          info = '未知错误';\n          break;\n        case RongIMLib.ErrorCode.REJECTED_BY_BLACKLIST:\n          info = '在黑名单中，无法向对方发送消息';\n          break;\n        case RongIMLib.ErrorCode.NOT_IN_DISCUSSION:\n          info = '不在讨论组中';\n          break;\n        case RongIMLib.ErrorCode.NOT_IN_GROUP:\n          info = '不在群组中';\n          break;\n        case RongIMLib.ErrorCode.NOT_IN_CHATROOM:\n          info = '不在聊天室中';\n          break;\n        default:\n          info = x;\n          break;\n      }\n      console.log('发送失败:' + info);\n    }\n  });\n}\n\n/***/ }),\n\n/***/ \"HHHD\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ./node_modules/babel-runtime/core-js/object/values.js\nvar values = __webpack_require__(\"gRE1\");\nvar values_default = /*#__PURE__*/__webpack_require__.n(values);\n\n// EXTERNAL MODULE: ./node_modules/babel-runtime/core-js/json/stringify.js\nvar stringify = __webpack_require__(\"mvHQ\");\nvar stringify_default = /*#__PURE__*/__webpack_require__.n(stringify);\n\n// EXTERNAL MODULE: ./src/utils/rongyun.js\nvar rongyun = __webpack_require__(\"6+H1\");\n\n// EXTERNAL MODULE: ./node_modules/vuex/dist/vuex.esm.js\nvar vuex_esm = __webpack_require__(\"NYxO\");\n\n// EXTERNAL MODULE: ./static/js/cookie.js\nvar cookie = __webpack_require__(\"g5nd\");\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vux-loader/src/script-loader.js!./node_modules/vux-loader/src/script-loader.js!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/pages/members/downChatRecord.vue\n\n\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ var downChatRecord = ({\n  data: function data() {\n    return {\n      msgContent: [],\n      targetId: ''\n    };\n  },\n  created: function created() {\n    this.getOrderInfo();\n  },\n\n  methods: {\n    // 得到这个订单的具体信息，从而找到mid_id, tomid_idmyordertaking\n    getOrderInfo: function getOrderInfo() {\n      var _this = this;\n\n      return this.$api.ciciouuml(this.$route.query.orderid).then(function (res) {\n        // 以老师的名义去获取聊天记录\n        var userId = res.data.tomember + res.data.out_trade_no;\n        var userName = res.data.tomember + res.data.out_trade_no;\n        var targetId = res.data.mid + res.data.out_trade_no;\n        _this.targetId = targetId;\n        _this.getRongYunToken(userId, userName);\n      });\n    },\n    // 得到融云的token\n    getRongYunToken: function getRongYunToken(userId, userName) {\n      var _this2 = this;\n\n      // 聊天对方的信息，格式为 mid + out_trade_no + tomember(非老师的按照0补位)\n      var data = {\n        'userId': userId,\n        'userName': userName,\n        'avatar': 'vip'\n      };\n      return this.$api.downrongyun(data).then(function (res) {\n        _this2.startInit(res.data.token);\n      });\n    },\n    // 初始化融云\n    startInit: function startInit(rongyun_token) {\n      var that = this;\n      var orderid = this.$route.query.orderid;\n\n      var callbacks = {\n        getCurrentUser: function getCurrentUser(userInfo) {\n          that.getHistoryMessages();\n        },\n        receiveNewMessage: function receiveNewMessage(msg) {\n          var history = that.msgContent; //changeMessage\n        }\n      };\n      rongyun[\"c\" /* init */](rongyun_token, callbacks);\n    },\n    getHistoryMessages: function getHistoryMessages() {\n      var that = this;\n      console.log(that.targetId);\n      var conversationType = RongIMLib.ConversationType.PRIVATE;\n      var targetId = that.targetId;\n      var timestrap = null;\n      var count = 20;\n      RongIMLib.RongIMClient.getInstance().getHistoryMessages(conversationType, targetId, timestrap, count, {\n        onSuccess: function onSuccess(list, hasMsg) {\n          var arr = list;\n          that.msgContent = arr.concat(that.msgContent);\n          if (hasMsg) {\n            that.getHistoryMessages();\n          } else {\n            var logs = stringify_default()(values_default()(that.msgContent));\n            // 重新写一个方法，没有任何的权限限制\n            return that.$api.chatlogs(that.$route.query.orderid, { 'chatrecord': logs }).then(function (res) {});\n          }\n        }\n      });\n    }\n  }\n});\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vux-loader/src/script-loader.js!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/pages/members/downChatRecord.vue\n\n\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ var members_downChatRecord = ({\n  data: function data() {\n    return {\n      msgContent: [],\n      targetId: ''\n    };\n  },\n  created: function created() {\n    this.getOrderInfo();\n  },\n\n  methods: {\n    // 得到这个订单的具体信息，从而找到mid_id, tomid_idmyordertaking\n    getOrderInfo: function getOrderInfo() {\n      var _this = this;\n\n      return this.$api.ciciouuml(this.$route.query.orderid).then(function (res) {\n        // 以老师的名义去获取聊天记录\n        var userId = res.data.tomember + res.data.out_trade_no;\n        var userName = res.data.tomember + res.data.out_trade_no;\n        var targetId = res.data.mid + res.data.out_trade_no;\n        _this.targetId = targetId;\n        _this.getRongYunToken(userId, userName);\n      });\n    },\n    // 得到融云的token\n    getRongYunToken: function getRongYunToken(userId, userName) {\n      var _this2 = this;\n\n      // 聊天对方的信息，格式为 mid + out_trade_no + tomember(非老师的按照0补位)\n      var data = {\n        'userId': userId,\n        'userName': userName,\n        'avatar': 'vip'\n      };\n      return this.$api.downrongyun(data).then(function (res) {\n        _this2.startInit(res.data.token);\n      });\n    },\n    // 初始化融云\n    startInit: function startInit(rongyun_token) {\n      var that = this;\n      var orderid = this.$route.query.orderid;\n\n      var callbacks = {\n        getCurrentUser: function getCurrentUser(userInfo) {\n          that.getHistoryMessages();\n        },\n        receiveNewMessage: function receiveNewMessage(msg) {\n          var history = that.msgContent; //changeMessage\n        }\n      };\n      rongyun[\"c\" /* init */](rongyun_token, callbacks);\n    },\n    getHistoryMessages: function getHistoryMessages() {\n      var that = this;\n      console.log(that.targetId);\n      var conversationType = RongIMLib.ConversationType.PRIVATE;\n      var targetId = that.targetId;\n      var timestrap = null;\n      var count = 20;\n      RongIMLib.RongIMClient.getInstance().getHistoryMessages(conversationType, targetId, timestrap, count, {\n        onSuccess: function onSuccess(list, hasMsg) {\n          var arr = list;\n          that.msgContent = arr.concat(that.msgContent);\n          if (hasMsg) {\n            that.getHistoryMessages();\n          } else {\n            var logs = stringify_default()(values_default()(that.msgContent));\n            // 重新写一个方法，没有任何的权限限制\n            return that.$api.chatlogs(that.$route.query.orderid, { 'chatrecord': logs }).then(function (res) {});\n          }\n        }\n      });\n    }\n  }\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7c9b2826\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vux-loader/src/before-template-compiler-loader.js!./node_modules/vux-loader/src/template-loader.js!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/members/downChatRecord.vue\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"mui-content\"},[_vm._v(\"downChatRecord\")])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ var pages_members_downChatRecord = (esExports);\n// CONCATENATED MODULE: ./src/pages/members/downChatRecord.vue\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  members_downChatRecord,\n  pages_members_downChatRecord,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ var src_pages_members_downChatRecord = __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"TmV0\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"fZOM\");\nmodule.exports = __webpack_require__(\"FeBl\").Object.values;\n\n\n/***/ }),\n\n/***/ \"fZOM\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// https://github.com/tc39/proposal-object-values-entries\nvar $export = __webpack_require__(\"kM2E\");\nvar $values = __webpack_require__(\"mbce\")(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n\n\n/***/ }),\n\n/***/ \"gRE1\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(\"TmV0\"), __esModule: true };\n\n/***/ }),\n\n/***/ \"mbce\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar DESCRIPTORS = __webpack_require__(\"+E39\");\nvar getKeys = __webpack_require__(\"lktj\");\nvar toIObject = __webpack_require__(\"TcQ7\");\nvar isEnum = __webpack_require__(\"NpIQ\").f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/7.b76fdbfcf71b230f96a3.js","export function init(rongyun_token, callbacks) {\n  var appKey = \"qf3d5gbjqhy6h\";\n  var token = rongyun_token;\n  var RongIMClient = RongIMLib.RongIMClient;\n  var config = {};\n  /*\n    重新部署后替换为新路径\n    路径格式说明：不带http(s)://，为了自动从页面继承协议方便\n    */\n  config.protobuf =  \"./static/rongyun/protobuf-2.3.1.min.js\",\n    //初始化\n    RongIMClient.init(appKey,null,config);\n\n  var instance = RongIMClient.getInstance();\n\n  // 连接状态监听器\n  RongIMClient.setConnectionStatusListener({\n    onChanged: function(status) {\n      console.log(status)\n      switch (status) {\n        case RongIMLib.ConnectionStatus[\"CONNECTED\"]:\n        case 0:\n          console.log(\"连接成功\");\n          break;\n\n        case RongIMLib.ConnectionStatus[\"CONNECTING\"]:\n        case 1:\n          console.log(\"连接中\");\n          break;\n\n        case RongIMLib.ConnectionStatus[\"DISCONNECTED\"]:\n        case 2:\n          console.log(\"当前用户主动断开链接\");\n          break;\n\n        case RongIMLib.ConnectionStatus[\"NETWORK_UNAVAILABLE\"]:\n        case 3:\n          console.log(\"网络不可用\");\n          break;\n\n        case RongIMLib.ConnectionStatus[\"CONNECTION_CLOSED\"]:\n        case 4:\n          console.log(\"未知原因，连接关闭\");\n          break;\n\n        case RongIMLib.ConnectionStatus[\"KICKED_OFFLINE_BY_OTHER_CLIENT\"]:\n        case 6:\n          alert(\"用户账户在其他设备登录，本机会被踢掉线\");\n          break;\n\n        case RongIMLib.ConnectionStatus[\"DOMAIN_INCORRECT\"]:\n        case 12:\n          console.log(\"当前运行域名错误，请检查安全域名配置\");\n          break;\n      }\n    }\n  });\n\n  //开始链接，得到用户的ID\n  RongIMClient.connect(\n    token, {\n      onSuccess: function(userId) {\n        console.log('rongyunjs='+ userId)\n        callbacks.getCurrentUser && callbacks.getCurrentUser({userId: userId,});\n      },\n      onTokenIncorrect: function() {\n        console.log(\"token无效\");\n      },\n      onError: function(errorCode) {\n        console.log(errorCode);\n      }\n    },\n  );\n  // 重新连接\n  var callback = {\n    onSuccess: function(userId) {\n      callbacks.getCurrentUser && callbacks.getCurrentUser({userId: userId,});\n      console.log('Reconnect successfully. ' + userId);\n    },\n    onTokenIncorrect: function() {\n      console.log('token无效');\n    },\n    onError: function(errorCode){\n      console.log(errorcode);\n    }\n  };\n  var config = {\n    // 默认 false, true 启用自动重连，启用则为必选参数\n    auto: true,\n    // 网络嗅探地址 [http(s)://]cdn.ronghub.com/RongIMLib-2.2.6.min.js 可选\n    url: 'cdn.ronghub.com/RongIMLib-2.2.6.min.js',\n    // 重试频率 [100, 1000, 3000, 6000, 10000, 18000] 单位为毫秒，可选\n    rate: [100, 1000, 3000, 6000, 10000]\n  };\n  RongIMClient.reconnect(callback, config);\n  /*\n      文档：http://www.rongcloud.cn/docs/web.html#3、设置消息监听器\n      注意事项：\n          1：为了看到接收效果，需要另外一个用户向本用户发消息\n          2：判断会话唯一性 ：conversationType + targetId\n          3：显示消息在页面前，需要判断是否属于当前会话，避免消息错乱。\n          4：消息体属性说明可参考：http://rongcloud.cn/docs/api/js/index.html\n      */\n\n  RongIMClient.setOnReceiveMessageListener({\n    // 接收到的消息\n    onReceived: function(message) {\n      // 判断消息类型\n      // console.log(\"新消息: \" + message.targetId);\n      // console.log(message);\n      // 判断消息类型\n      switch (message.messageType) {\n        case RongIMClient.MessageType.TextMessage:\n          // message.content.content => 消息内容\n          break;\n        case RongIMClient.MessageType.VoiceMessage:\n          // message.content.content 格式为 AMR 格式的 base64 码\n          break;\n        case RongIMClient.MessageType.ImageMessage:\n          // message.content.content => 图片缩略图 base64。\n          // message.content.imageUri => 原图 URL。\n          break;\n        case RongIMClient.MessageType.DiscussionNotificationMessage:\n          // message.content.extension => 讨论组中的人员。\n          break;\n        case RongIMClient.MessageType.RichContentMessage:\n          // message.content.content => 文本消息内容。\n          // message.content.imageUri => 图片 base64。\n          // message.content.url => 原图 URL。\n          break;\n      }\n      callbacks.receiveNewMessage && callbacks.receiveNewMessage(message);\n    }\n  });\n}\n/*\n* 获得历史消息\n*/\nexport function getHistoryMessages(conversationtype, targetId, timestrap, count) {\n  RongIMClient.getInstance().getHistoryMessages(conversationtype, targetId, timestrap, count, {\n    onSuccess: function(list, hasMsg) {\n      // hasMsg为boolean值，如果为true则表示还有剩余历史消息可拉取，为false的话表示没有剩余历史消息可供拉取。\n      // list 为拉取到的历史消息列表\n    },\n    onError: function(error) {\n      // console.log(error)\n      // APP未开启消息漫游或处理异常\n      // throw new ERROR ......\n    }\n  });\n}\n/*\n * 对方输入的状态\n */\nexport function sendTypingStatus(targetId){\n  var conversationType = RongIMLib.ConversationType.PRIVATE; // 只有单聊有正在输入状态\n  var msgName = 'TextMessage'; //用户正在输入的消息类型 VoiceMessage等。\n  var targetId = targetId;\n  RongIMClient.getInstance().sendTypingStatusMessage(conversationType, targetId, msgName, {\n    onSuccess: function (message) {\n      console.log('typing');\n    },\n    onError: function (errorCode, message) {\n      var info = '';\n      switch (errorCode) {\n        case RongIMLib.ErrorCode.TIMEOUT:\n          info = '超时';\n          break;\n        case RongIMLib.ErrorCode.UNKNOWN:\n          info = '未知错误';\n          break;\n      }\n      console.log('发送失败:' + info + errorCode);\n    }\n  });\n}\n/*\n * 清空历史消息\n */\nexport function clearRemoteHistoryMessages(targetId) {\n  /**\n   conversationType: 会话类型\n\n   targetId: 目标 Id\n\n   timestamp: 清除时间点，message.sentTime <= timestamp 的消息将被清除 (message: 收发实时或者历史消息中有 sentTime 属性)\n   timestamp 取值范围:  timestamp >=0 并且 timestamp <= 当前会话最后一条消息的 sentTime\n   */\n  var params = {\n    conversationType: RongIMLib.ConversationType.PRIVATE, // 会话类型\n    targetId: targetId, // 目标 Id\n    timestamp: 0 // 清除时间点\n  };\n  RongIMLib.RongIMClient.getInstance().clearRemoteHistoryMessages(params, {\n    onSuccess: function() {\n      // 清除成功\n    },\n    onError: function(error) {\n      // 请排查：单群聊消息云存储是否开通\n      console.log(error);\n    }\n  });\n}\n/*\n * 使用发送文件消息，用来发送语音\n */\nexport function FileMessage(target, name, fileUrl, callbacks){\n  var size = 1024,\n    type = 'mp3';\n  var msg = new RongIMLib.FileMessage({ name: name, size: size, type: type, fileUrl: fileUrl});\n  var conversationtype = RongIMLib.ConversationType.PRIVATE; // 单聊,其他会话选择相应的消息类型即可。\n  var targetId = target; // 目标 Id\n  RongIMClient.getInstance().sendMessage(conversationtype, targetId, msg, {\n      onSuccess: function (message) {\n        //message 为发送的消息对象并且包含服务器返回的消息唯一Id和发送消息时间戳\n        console.log(\"Send mp3\");\n        console.log(\"Send successfully:\"+JSON.stringify(message));\n        callbacks.sendMp3 && callbacks.sendMp3(message);\n      },\n    }\n  );\n}\n/*\n 图片消息\n */\nexport function ImageMessage(target, base64Str, imageUri, callbacks){\n  /*\n       图片转为可以使用 HTML5 的 FileReader 或者 canvas 也可以上传到后台进行转换。\n       注意事项：\n           1、缩略图必须是 base64 码的 jpg 图。\n           2、不带前缀。\n           3、大小建议不超过 100 K。\n     */\n    var msg = new RongIMLib.ImageMessage({content:base64Str,imageUri:imageUri});\n    var conversationtype = RongIMLib.ConversationType.PRIVATE;\n    var targetId = target;\n    console.log('rongyun-conver:'+conversationtype)\n    console.log('rongyun-targetId:'+targetId)\n    console.log('rongyun-msg:'+msg)\n    RongIMClient.getInstance().sendMessage(conversationtype, targetId, msg, {\n        onSuccess: function (message) {\n          callbacks.sendImage && callbacks.sendImage(message);\n        }\n      });\n}\n/*\n * 发送文本消息\n */\nexport function sendTextMsg(conversationtype, targetId, msg, callbacks) {\n  RongIMClient.getInstance().sendMessage(conversationtype, targetId, msg, {\n      onSuccess: function (message) {\n        //message 为发送的消息对象并且包含服务器返回的消息唯一Id和发送消息时间戳，使用回调函数\n        callbacks.sendMessage && callbacks.sendMessage(message); // 这样返回的是存文字\n      },\n      onError: function (errorCode,message) {\n        var info = '';\n        switch (errorCode) {\n          case RongIMLib.ErrorCode.TIMEOUT:\n            info = '超时';\n            break;\n          case RongIMLib.ErrorCode.UNKNOWN_ERROR:\n            info = '未知错误';\n            break;\n          case RongIMLib.ErrorCode.REJECTED_BY_BLACKLIST:\n            info = '在黑名单中，无法向对方发送消息';\n            break;\n          case RongIMLib.ErrorCode.NOT_IN_DISCUSSION:\n            info = '不在讨论组中';\n            break;\n          case RongIMLib.ErrorCode.NOT_IN_GROUP:\n            info = '不在群组中';\n            break;\n          case RongIMLib.ErrorCode.NOT_IN_CHATROOM:\n            info = '不在聊天室中';\n            break;\n          default :\n            info = x;\n            break;\n        }\n        console.log('发送失败:' + info);\n      }\n    }\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/rongyun.js","//\n//\n//\n//\n\nimport * as utils from '../../utils/rongyun'\nimport { mapGetters } from 'vuex'\nimport cookie from '../../../static/js/cookie'\nexport default {\n  data () {\n    return {\n      msgContent:[],\n      targetId:''\n    }\n  },\n  created () {\n    this.getOrderInfo()\n  },\n  methods: {\n    // 得到这个订单的具体信息，从而找到mid_id, tomid_idmyordertaking\n    getOrderInfo: function () {\n      return this.$api.ciciouuml(this.$route.query.orderid).then(res => {\n        // 以老师的名义去获取聊天记录\n        let userId = res.data.tomember+res.data.out_trade_no\n        let userName = res.data.tomember+res.data.out_trade_no\n        let targetId = res.data.mid+res.data.out_trade_no\n        this.targetId = targetId\n        this.getRongYunToken(userId,userName)\n      })\n    },\n    // 得到融云的token\n    getRongYunToken: function (userId,userName) {\n      // 聊天对方的信息，格式为 mid + out_trade_no + tomember(非老师的按照0补位)\n      let data = {\n        'userId': userId,\n        'userName': userName,\n        'avatar': 'vip',\n      }\n      return this.$api.downrongyun(data).then(res => {\n        this.startInit(res.data.token)\n      })\n    },\n    // 初始化融云\n    startInit: function (rongyun_token) {\n      const that = this\n      let orderid = this.$route.query.orderid\n\n      let callbacks = {\n        getCurrentUser(userInfo) {\n          that.getHistoryMessages();\n        },\n        receiveNewMessage(msg) {\n          let history = that.msgContent //changeMessage\n        },\n      };\n      utils.init(rongyun_token, callbacks)\n    },\n    getHistoryMessages: function () {\n      const that = this\n      console.log(that.targetId)\n      let conversationType = RongIMLib.ConversationType.PRIVATE\n      let targetId = that.targetId\n      let timestrap = null;\n      let count = 20;\n      RongIMLib.RongIMClient.getInstance().getHistoryMessages(conversationType, targetId, timestrap, count, {\n        onSuccess: function(list, hasMsg) {\n          let arr = list\n          that.msgContent = arr.concat(that.msgContent)\n          if(hasMsg){\n            that.getHistoryMessages()\n          }else{\n            let logs = JSON.stringify(Object.values(that.msgContent))\n            // 重新写一个方法，没有任何的权限限制\n            return that.$api.chatlogs(that.$route.query.orderid,{'chatrecord':logs}).then(res => {\n            })\n          }\n        },\n      });\n    },\n  },\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/members/downChatRecord.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"mui-content\"},[_vm._v(\"downChatRecord\")])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7c9b2826\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vux-loader/src/before-template-compiler-loader.js!./node_modules/vux-loader/src/template-loader.js!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/members/downChatRecord.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vux-loader/src/script-loader.js!../../../node_modules/vux-loader/src/script-loader.js!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./downChatRecord.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vux-loader/src/script-loader.js!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./downChatRecord.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7c9b2826\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vux-loader/src/before-template-compiler-loader.js!../../../node_modules/vux-loader/src/template-loader.js!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./downChatRecord.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/members/downChatRecord.vue\n// module id = null\n// module chunks = ","require('../../modules/es7.object.values');\nmodule.exports = require('../../modules/_core').Object.values;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/values.js\n// module id = TmV0\n// module chunks = 7","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es7.object.values.js\n// module id = fZOM\n// module chunks = 7","module.exports = { \"default\": require(\"core-js/library/fn/object/values\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/values.js\n// module id = gRE1\n// module chunks = 7","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-to-array.js\n// module id = mbce\n// module chunks = 7"],"sourceRoot":""}